---
swagger: '2.0'
info:
  description: |
    API to handle agent
  version: 0.0.1
  title: Agent API
host: 'localhost:8080'
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /rest/v1/rh/id:
    get:
      tags: 
        - agent 
        - rh
      operationId: rhID
      description: "Returns JSON formatted Id of RH, UUID which is the PGP fingerprint"
      responses:
        '200':
          description: JSON formatted Id of RH
          schema:
            type: array
            items:
              $ref: "#/definitions/fingerprint"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
  /rest/v1/list:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: cliList
      description: "Info returns JSON formatted list of Subutai instances with information such as IP address, parent template, etc."
      parameters: 
        - name: limit
          in: query
          type: integer
          format: int32
          default: 20
        - name: containersOnly
          in: query
          type: boolean
        - name: templatesOnly
          in: query
          type: boolean
        - name: withAncestors
          in: query
          type: boolean
        - name: withParents
          in: query
          type: boolean
      responses:
        '200':
          description: List all subutai instances
          schema:
            type: array
            items:
              $ref: "#/definitions/container"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
  /rest/v1/container/{name}:
    parameters:
      - type: string
        name: name
        in: path
        required: true
      - name: containersOnly
        in: query
        type: boolean
      - name: templatesOnly
        in: query
        type: boolean
      - name: detailedInfo
        in: query
        type: boolean
      - name: withAncestors
        in: query
        type: boolean
      - name: withParents
        in: query
        type: boolean
    get:
      tags:
        - agent
        - cli 
        - container
      operationId: getContainerInfo
      description: "Get container Info in JSON formatted object"

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/container"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - container
      operationId: destroyOne
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /rest/v1/backup/{name}:
    parameters:
      - type: string
        name: name
        in: path
        required: true
      - name: full
        in: query
        type: boolean
      - name: stop
        in: query
        type: boolean
    get:
      tags:
        - agent
        - cli 
        - container
      operationId: backupContainer
      description: "BackupContainer takes a snapshots of each container's volume and stores it in the `/mnt/backups/container_name/datetime/` directory.
A full backup creates a delta-file of each BTRFS subvolume. An incremental backup (default) creates a delta-file with the difference of changes between the current and last snapshots.
All deltas are compressed to archives in `/mnt/backups/` directory (container_datetime.tar.gz or container_datetime_Full.tar.gz for full backup).
A changelog file can be found next to backups archive (container_datetime_changelog.txt or container_datetime_Full_changelog.txt) which contains a list of changes made between two backups."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /rest/v1/batch:
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/batchLine"
      tags:
        - agent
        - cli 
        - container
      operationId: batch
      description: "Batch binding provides a mechanism to perform several Subutai commands in the container in batch,
passed in a single JSON message. Initially, the purpose of this command was internal for SS <-> Agent communication,
yet it may be invoked manually from the CLI.
The response from a batch command returns a JSON array with each element representing the results (response) from each command (request) in the batch:
the positions of responses correlate with the request position in the array"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /rest/v1/cleanup:
    get:
      tags:
        - agent
        - cli 
        - container
      operationId: cleanup
      description: "Cleanup simply removes every resource associated with a Subutai container or template:
data, network, configs, etc.
The destroy command always runs each step in \"force\" mode to provide reliable deletion results;
even if some instance components were already removed, the destroy command will continue to perform all operations once again while ignoring possible underlying errors: i.e. missing configuration files."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /rest/v1/clone/{parent}/{child}:
    post:
      parameters:
        - type: string
          name: parent
          in: path
          required: true
        - type: string
          name: child
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/cloneArgs"

      tags:
        - agent
        - cli 
        - container
      operationId: clone
      description: "Clone function creates new `child` container from a Subutai `parent` template.
                    If the specified template argument is not deployed in system, Subutai first tries to import it, and if import succeeds, it then continues to clone from the imported template image.
                    By default, clone will use the NAT-ed network interface with IP address received from the Subutai DHCP server, but this behavior can be changed with command options described below.

                    If `ipaddr` option is defined, separate bridge interface will be created in specified VLAN and new container will receive static IP address.
                    Option `envID` writes the environment ID string inside new container.
                    Option `token` is intended to check the origin of new container creation request during environment build.
                    This is one of the security checks which makes sure that each container creation request is authorized by registered user.

                    Option `kurjunToken` set kurjun token to clone private and shared templates

                    The clone options are not intended for manual use: unless you're confident about what you're doing. Use default clone format without additional options to create Subutai containers."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /rest/v1/config:
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/configOptions"
      tags:
        - agent
        - cli 
        - container
      operationId: config
      description: "Allows read and write container's configuration file"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/configOptions"
      tags:
        - config
      operationId: destroyEntry
      description: "Delete entry in configuration file"
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /rest/v1/demote/{container}:
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/demoteOptions"
      tags:
        - agent
        - cli 
        - container
      operationId: demote
      description: "Converts template into regular Subutai container.

A Subutai template is a \"locked down\" container only to be used for cloning purposes. It cannot be started, and its file system cannot be modified: it's read-only.
Normal operational containers are promoted into templates, but sometimes you might want to demote them back to regular containers.
This is what the demote sub command does: it reverts a template without children back into a normal container.
Demoted container will use NAT network interface and dynamic IP address if opposite options are not specified."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /rest/v1/promote/{container}:
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/promoteOptions"
      tags:
        - agent
        - cli 
        - container
      operationId: promote
      description: "Promote turns a Subutai container into container template which may be cloned with \"clone\" command.
Promote executes several simple steps, such as dropping a container's configuration to default values,
dumping the list of installed packages (this step requires the target container to still be running),
and setting the container's filesystem to read-only to prevent changes."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /rest/v1/export/{container}:
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/exportOptions"
      tags:
        - agent
        - cli 
        - container
      operationId: export
      description: "Export prepares an archive from a template in the `/mnt/lib/lxc/tmpdir/` path.
This archive can be moved to another Subutai peer and deployed as ready-to-use template or uploaded to Subutai's global template repository to make it
widely available for others to use.

Export consist of two steps if the target is a container:
container promotion to template (see \"promote\" command) and packing the template into the archive.
If already a template just the packing of the archive takes place.

Configuration values for template metadata parameters can be overridden on export, like the recommended container size when the template is cloned using `-s` option."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /rest/v1/hostname/{container}/{name}:
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
        - type: string
          name: name
          in: path
          required: true
      tags:
        - agent
        - cli 
        - container
      operationId: hostname
      description: "        - type: string
          name: container
          in: path
          required: true"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/message"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /rest/v1/destroy/{ID}:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: destroy
      description: "Destroy Subutai container"
      parameters:
        - type: string
          name: ID
          in: path
          required: true
        - name: vlan
          in: query
          type: boolean

      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/message"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
  
  /rest/v1/import/{container}:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: import
      description: "Import Subutai template"
      parameters:
        - type: string
          name: container
          in: path
          required: true
        - name: body
          in: body
          schema:
            $ref: "#/definitions/importOptions"

      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/message"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
  /rest/v1/info:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: info
      description: "Info command's purposed is to display common system information, such as
external IP address to access the container host quotas, its CPU model, RAM size, etc. It's mainly used for internal SS needs."
      parameters:
        - type: string
          name: command
          in: query
          required: true

      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/infoHostStat"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
  /rest/v1/metrics:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: metrics
      description: "HostMetrics function retrieves monitoring data from a time-series database deployed in the SS Management server
for container hosts and Resource Hosts. Statistics are being collected by the Subutai daemon
and includes common information like CPU utilization, network load, RAM and disk usage for both containers and hosts.
Since the database is located on the SS Management Host, hosts which are not a part of a Subutai peer have no access to this information.
Data aggregation in the time-series database has following configuration:
last hour statistic is stored \"as is\",
last day data aggregates to 1 minute interval,
last week is in 5 minute intervals,
After 7 days all statistics is are overwritten by new incoming data."
      parameters:
        - type: string
          name: start
          in: query
          required: true
        - type: string
          name: end
          in: query
          required: true
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/metricInfo"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default

  /rest/v1/quota:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: quota
      description: "Quota function controls container's quotas and thresholds. Available resources:
cpu, %
cpuset, available cores
ram, Mb
network, Kbps
rootfs/home/var/opt, Gb
The threshold value represents a percentage for each resource. Once resource consumption exceeds this threshold it triggers an alert.
The clone operation, sets no quotas and thresholds for new containers; quotas need to be configured with quota command after a clone operation."
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/quotaArgs"
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/quotaOutput"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default

  /rest/v1/rename/{source}/{newname}:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: rename
      description: "Renames a Subutai container impacting filesystem paths, configuration values, etc."
      parameters:
        - type: string
          name: source
          in: path
          required: true
          
        - type: string
          name: newname
          in: path
          required: true
          

      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/message"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default

  /rest/v1/p2p:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: p2pList
      description: "P2P function controls and configures the peer-to-peer network structure:
the swarm which includes all hosts with same the same swarm hash and secret key.

P2P is a base layer for Subutai environment networking:
all containers in same environment are connected to each other via VXLAN tunnels and are accesses as if they were in one LAN.
It doesn't matter where the containers are physically located."
      parameters:
        - type: string
          name: command
          in: query
          required: true
          description: "Accepted commands:
          - list: list of p2p instances
          - interfaces: list of p2p interfaces
          - peers: list of p2p swarm participants by hash
          - version: print p2p version"
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/text"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
    put:
      tags: 
        - agent 
        - cli 
        - list
      operationId: p2pUpdate
      description: "P2P function controls and configures the peer-to-peer network structure:
the swarm which includes all hosts with same the same swarm hash and secret key.

P2P is a base layer for Subutai environment networking:
all containers in same environment are connected to each other via VXLAN tunnels and are accesses as if they were in one LAN.
It doesn't matter where the containers are physically located."
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/p2pArgs"
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/text"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
    delete:
      tags: 
        - agent 
        - cli 
        - list
      operationId: p2pDelete
      description: "P2P function controls and configures the peer-to-peer network structure:
the swarm which includes all hosts with same the same swarm hash and secret key.

P2P is a base layer for Subutai environment networking:
all containers in same environment are connected to each other via VXLAN tunnels and are accesses as if they were in one LAN.
It doesn't matter where the containers are physically located."
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/p2pArgs"
      responses:
        204:
          description: Deleted
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/p2pArgs"
      tags: 
        - agent 
        - cli 
        - list
      operationId: p2pCreate
      description: "P2P function controls and configures the peer-to-peer network structure:
the swarm which includes all hosts with same the same swarm hash and secret key.

P2P is a base layer for Subutai environment networking:
all containers in same environment are connected to each other via VXLAN tunnels and are accesses as if they were in one LAN.
It doesn't matter where the containers are physically located."
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/item"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default

  /rest/v1/proxy:
    get:
      tags: 
        - agent 
        - cli 
        - list
      operationId: proxyCheck
      description: "ProxyCheck exits with 0 code if domain or node is exists in specified vlan, otherwise exitcode is 1"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/proxyArgs"

      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/message"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
    delete:
      tags: 
        - agent 
        - cli 
        - list
      operationId: proxyDelete
      description: "ProxyDel checks what need to be removed - domain or node and pass args to required functions"
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/proxyArgs"
      responses:
        204:
          description: Deleted
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/proxyArgs"
      tags: 
        - agent 
        - cli 
        - list
      operationId: proxyCreate
      description: "ProxyAdd checks input args and perform required operations to configure reverse proxy"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/message"
        default:
          description: generic error response
          schema:
      x-swagger-router-controller: Default

definitions:
  text:
    type: object
    properties:
      text:
        type: string
        readOnly: true

  container:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        readOnly: true
      parent:
        type: string
        minLength: 1
      ancestor:
        type: string
        minLength: 1

  proxyArgs:
    type: object
    required:
      - vlan
    properties:
      vlan:
        type: string
        readOnly: true
      node:
        type: string
        minLength: 1
      policy:
        type: string
        minLength: 1
      cert:
        type: string
        minLength: 1
      domain:
        type: boolean
        minLength: 1

  quotaArgs:
    type: object
    required:
      - name
      - resource
    properties:
      name:
        type: string
        readOnly: true
      resource:
        type: string
        minLength: 1
      size:
        type: string
        minLength: 1
      threshold:
        type: string
        minLength: 1

  quotaOutput:
    type: object
    required:
      - quota
      - threshold
    properties:
      quota:
        type: string
        readOnly: true
      threshold:
        type: string
        minLength: 1

  fingerprint:
    type: object
    required:
      - hash
    properties:
      hash:
        type: string
        readOnly: true
  batchLine:
    type: object
    required:
      - action
      - args
    properties:
      action:
        type: string
        readOnly: true
      args:
        type: array
        items:
          $ref: "#/definitions/item"
        readOnly: true
  infoHostStat:
    type: object
    properties:
      cpu:
        type: array
        items:
          $ref: "#/definitions/cpuInfo"
        readOnly: true
      disk:
        type: array
        items:
          $ref: "#/definitions/diskInfo"
        readOnly: true
      ram:
        type: array
        items:
          $ref: "#/definitions/ramInfo"
        readOnly: true
      quota:
        type: array
        items:
          $ref: "#/definitions/quotaInfo"
        readOnly: true
      hostname:
        type: string
        readOnly: true
  cpuInfo:
    type: object
    properties:
      model:
          type: string
          readOnly: true
      coreCount:
          type: string
          readOnly: true
      idle:
          type: string
          readOnly: true
      frequency:
          type: string
          readOnly: true
  diskInfo:
    type: object
    properties:
      total:
          type: string
          readOnly: true
      used:
          type: string
          readOnly: true
  ramInfo:
    type: object
    properties:
      free:
          type: string
          readOnly: true
      total:
          type: string
          readOnly: true
      cached:
          type: string
          readOnly: true
  quotaInfo:
    type: object
    properties:
      container:
        type: string
        readOnly: true
      cpu:
        type: string
        readOnly: true
      ram:
        type: string
        readOnly: true
      disk:
        type: array
        items:
          $ref: "#/definitions/diskStructInfo"
        readOnly: true
  metricInfo:
    type: object
    properties:
      series:
        type: string
        readOnly: true
      messages:
        type: string
        readOnly: true
  diskStructInfo:
    type: object
    properties:
      home:
        type: string
        readOnly: true
      opt:
        type: string
        readOnly: true
      rootfs:
        type: string
        readOnly: true
      var:
        type: string
        readOnly: true
  cloneArgs:
    type: object
    required:
      - parent
      - child
    properties:
      parent:
        type: string
        readOnly: true
      child:
        type: string
        readOnly: true
      envID:
        type: string
        readOnly: true
      ipaddr:
        type: string
        readOnly: true
      token:
        type: string
        readOnly: true
      kurjunToken:
        type: string
        readOnly: true
  p2pArgs:
    type: object
    required:
      - interfaceName
      - hash
      - key
      - ttl
    properties:
      interfaceName:
        type: string
        readOnly: true
      hash:
        type: string
        readOnly: true
      key:
        type: string
        readOnly: true
      ttl:
        type: string
        readOnly: true
      localPeepIPAddr:
        type: string
        readOnly: true
      portRange:
        type: string
        readOnly: true
  configOptions:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        readOnly: true
      value:
        type: string
        readOnly: true
  demoteOptions:
    type: object
    properties:
      ipaddr:
        type: string
        readOnly: true
      vlan:
        type: string
        readOnly: true
  promoteOptions:
    type: object
    properties:
      source:
        type: string
        readOnly: true

  exportOptions:
    type: object
    properties:
      version:
        type: string
        readOnly: true
      size:
        type: integer
        readOnly: true
      token:
        type: string
        readOnly: true
      description:
        type: string
        readOnly: true
      private:
        type: boolean
        readOnly: true
  
  importOptions:
    type: object
    properties:
      version:
        type: string
        readOnly: true
      torrent:
        type: boolean
        readOnly: true
      token:
        type: string
        readOnly: true

  item:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        readOnly: true
  message:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        readOnly: true
      exitcode:
        type: string
        readOnly: true
  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
