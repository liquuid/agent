// Code generated by go-swagger; DO NOT EDIT.

package info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/subutai-io/agent/rest/models"
)

// InfoOKCode is the HTTP code returned for type InfoOK
const InfoOKCode int = 200

/*InfoOK Ok

swagger:response infoOK
*/
type InfoOK struct {

	/*
	  In: Body
	*/
	Payload models.InfoOKBody `json:"body,omitempty"`
}

// NewInfoOK creates InfoOK with default headers values
func NewInfoOK() *InfoOK {
	return &InfoOK{}
}

// WithPayload adds the payload to the info o k response
func (o *InfoOK) WithPayload(payload models.InfoOKBody) *InfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the info o k response
func (o *InfoOK) SetPayload(payload models.InfoOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.InfoOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*InfoDefault generic error response

swagger:response infoDefault
*/
type InfoDefault struct {
	_statusCode int
}

// NewInfoDefault creates InfoDefault with default headers values
func NewInfoDefault(code int) *InfoDefault {
	if code <= 0 {
		code = 500
	}

	return &InfoDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the info default response
func (o *InfoDefault) WithStatusCode(code int) *InfoDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the info default response
func (o *InfoDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *InfoDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
