// Code generated by go-swagger; DO NOT EDIT.

package resource_host

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RhIDHandlerFunc turns a function with the right signature into a rh ID handler
type RhIDHandlerFunc func(RhIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RhIDHandlerFunc) Handle(params RhIDParams) middleware.Responder {
	return fn(params)
}

// RhIDHandler interface for that can handle valid rh ID params
type RhIDHandler interface {
	Handle(RhIDParams) middleware.Responder
}

// NewRhID creates a new http.Handler for the rh ID operation
func NewRhID(ctx *middleware.Context, handler RhIDHandler) *RhID {
	return &RhID{Context: ctx, Handler: handler}
}

/*RhID swagger:route GET /rest/v1/rh/id resource host rhId

Returns JSON formatted Id of RH, UUID which is the PGP fingerprint

*/
type RhID struct {
	Context *middleware.Context
	Handler RhIDHandler
}

func (o *RhID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRhIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
