// Code generated by go-swagger; DO NOT EDIT.

package tunnel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/subutai-io/agent/rest/models"
)

// TunnelListOKCode is the HTTP code returned for type TunnelListOK
const TunnelListOKCode int = 200

/*TunnelListOK Ok

swagger:response tunnelListOK
*/
type TunnelListOK struct {

	/*
	  In: Body
	*/
	Payload models.TunnelListOKBody `json:"body,omitempty"`
}

// NewTunnelListOK creates TunnelListOK with default headers values
func NewTunnelListOK() *TunnelListOK {
	return &TunnelListOK{}
}

// WithPayload adds the payload to the tunnel list o k response
func (o *TunnelListOK) WithPayload(payload models.TunnelListOKBody) *TunnelListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tunnel list o k response
func (o *TunnelListOK) SetPayload(payload models.TunnelListOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TunnelListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.TunnelListOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*TunnelListDefault generic error response

swagger:response tunnelListDefault
*/
type TunnelListDefault struct {
	_statusCode int
}

// NewTunnelListDefault creates TunnelListDefault with default headers values
func NewTunnelListDefault(code int) *TunnelListDefault {
	if code <= 0 {
		code = 500
	}

	return &TunnelListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the tunnel list default response
func (o *TunnelListDefault) WithStatusCode(code int) *TunnelListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the tunnel list default response
func (o *TunnelListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *TunnelListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
