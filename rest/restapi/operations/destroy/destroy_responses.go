// Code generated by go-swagger; DO NOT EDIT.

package destroy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/subutai-io/agent/rest/models"
)

// DestroyOKCode is the HTTP code returned for type DestroyOK
const DestroyOKCode int = 200

/*DestroyOK Ok

swagger:response destroyOK
*/
type DestroyOK struct {

	/*
	  In: Body
	*/
	Payload models.DestroyOKBody `json:"body,omitempty"`
}

// NewDestroyOK creates DestroyOK with default headers values
func NewDestroyOK() *DestroyOK {
	return &DestroyOK{}
}

// WithPayload adds the payload to the destroy o k response
func (o *DestroyOK) WithPayload(payload models.DestroyOKBody) *DestroyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the destroy o k response
func (o *DestroyOK) SetPayload(payload models.DestroyOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DestroyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.DestroyOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*DestroyDefault generic error response

swagger:response destroyDefault
*/
type DestroyDefault struct {
	_statusCode int
}

// NewDestroyDefault creates DestroyDefault with default headers values
func NewDestroyDefault(code int) *DestroyDefault {
	if code <= 0 {
		code = 500
	}

	return &DestroyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the destroy default response
func (o *DestroyDefault) WithStatusCode(code int) *DestroyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the destroy default response
func (o *DestroyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *DestroyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
