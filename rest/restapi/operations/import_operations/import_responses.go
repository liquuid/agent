// Code generated by go-swagger; DO NOT EDIT.

package import_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/subutai-io/agent/rest/models"
)

// ImportOKCode is the HTTP code returned for type ImportOK
const ImportOKCode int = 200

/*ImportOK Ok

swagger:response importOK
*/
type ImportOK struct {

	/*
	  In: Body
	*/
	Payload models.ImportOKBody `json:"body,omitempty"`
}

// NewImportOK creates ImportOK with default headers values
func NewImportOK() *ImportOK {
	return &ImportOK{}
}

// WithPayload adds the payload to the import o k response
func (o *ImportOK) WithPayload(payload models.ImportOKBody) *ImportOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the import o k response
func (o *ImportOK) SetPayload(payload models.ImportOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ImportOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.ImportOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ImportDefault generic error response

swagger:response importDefault
*/
type ImportDefault struct {
	_statusCode int
}

// NewImportDefault creates ImportDefault with default headers values
func NewImportDefault(code int) *ImportDefault {
	if code <= 0 {
		code = 500
	}

	return &ImportDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the import default response
func (o *ImportDefault) WithStatusCode(code int) *ImportDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the import default response
func (o *ImportDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *ImportDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
