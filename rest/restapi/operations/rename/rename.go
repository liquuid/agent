// Code generated by go-swagger; DO NOT EDIT.

package rename

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RenameHandlerFunc turns a function with the right signature into a rename handler
type RenameHandlerFunc func(RenameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RenameHandlerFunc) Handle(params RenameParams) middleware.Responder {
	return fn(params)
}

// RenameHandler interface for that can handle valid rename params
type RenameHandler interface {
	Handle(RenameParams) middleware.Responder
}

// NewRename creates a new http.Handler for the rename operation
func NewRename(ctx *middleware.Context, handler RenameHandler) *Rename {
	return &Rename{Context: ctx, Handler: handler}
}

/*Rename swagger:route GET /rest/v1/rename/{source}/{newname} rename rename

Renames a Subutai container impacting filesystem paths, configuration values, etc.

*/
type Rename struct {
	Context *middleware.Context
	Handler RenameHandler
}

func (o *Rename) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRenameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
