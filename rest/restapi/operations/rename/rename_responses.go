// Code generated by go-swagger; DO NOT EDIT.

package rename

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/subutai-io/agent/rest/models"
)

// RenameOKCode is the HTTP code returned for type RenameOK
const RenameOKCode int = 200

/*RenameOK Ok

swagger:response renameOK
*/
type RenameOK struct {

	/*
	  In: Body
	*/
	Payload models.RenameOKBody `json:"body,omitempty"`
}

// NewRenameOK creates RenameOK with default headers values
func NewRenameOK() *RenameOK {
	return &RenameOK{}
}

// WithPayload adds the payload to the rename o k response
func (o *RenameOK) WithPayload(payload models.RenameOKBody) *RenameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the rename o k response
func (o *RenameOK) SetPayload(payload models.RenameOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RenameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.RenameOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*RenameDefault generic error response

swagger:response renameDefault
*/
type RenameDefault struct {
	_statusCode int
}

// NewRenameDefault creates RenameDefault with default headers values
func NewRenameDefault(code int) *RenameDefault {
	if code <= 0 {
		code = 500
	}

	return &RenameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the rename default response
func (o *RenameDefault) WithStatusCode(code int) *RenameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the rename default response
func (o *RenameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *RenameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
