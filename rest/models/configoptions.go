// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Configoptions Key / Value pair configuration
// swagger:model Configoptions
type Configoptions struct {

	// Key
	// Required: true
	// Read Only: true
	Key string `json:"key"`

	// Value
	// Required: true
	// Read Only: true
	Value string `json:"value"`
}

// Validate validates this configoptions
func (m *Configoptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKey(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Configoptions) validateKey(formats strfmt.Registry) error {

	if err := validate.RequiredString("key", "body", string(m.Key)); err != nil {
		return err
	}

	return nil
}

func (m *Configoptions) validateValue(formats strfmt.Registry) error {

	if err := validate.RequiredString("value", "body", string(m.Value)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Configoptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Configoptions) UnmarshalBinary(b []byte) error {
	var res Configoptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
