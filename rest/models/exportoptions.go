// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Exportoptions exportoptions
// swagger:model Exportoptions
type Exportoptions struct {

	// Description
	// Read Only: true
	Description string `json:"description,omitempty"`

	// Export to private template
	// Read Only: true
	Private *bool `json:"private,omitempty"`

	// Size
	Size string `json:"size,omitempty"`

	// Token
	// Read Only: true
	Token string `json:"token,omitempty"`

	// Version number
	// Read Only: true
	Version string `json:"version,omitempty"`
}

// Validate validates this exportoptions
func (m *Exportoptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSize(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var exportoptionsTypeSizePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["tiny","small","medium","large","huge"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		exportoptionsTypeSizePropEnum = append(exportoptionsTypeSizePropEnum, v)
	}
}

const (
	// ExportoptionsSizeTiny captures enum value "tiny"
	ExportoptionsSizeTiny string = "tiny"
	// ExportoptionsSizeSmall captures enum value "small"
	ExportoptionsSizeSmall string = "small"
	// ExportoptionsSizeMedium captures enum value "medium"
	ExportoptionsSizeMedium string = "medium"
	// ExportoptionsSizeLarge captures enum value "large"
	ExportoptionsSizeLarge string = "large"
	// ExportoptionsSizeHuge captures enum value "huge"
	ExportoptionsSizeHuge string = "huge"
)

// prop value enum
func (m *Exportoptions) validateSizeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, exportoptionsTypeSizePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Exportoptions) validateSize(formats strfmt.Registry) error {

	if swag.IsZero(m.Size) { // not required
		return nil
	}

	// value enum
	if err := m.validateSizeEnum("size", "body", m.Size); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Exportoptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Exportoptions) UnmarshalBinary(b []byte) error {
	var res Exportoptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
