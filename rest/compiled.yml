swagger: '2.0'
info:
  title: Hub API
  description: Subutai Agent private REST API
  version: 1.0.0
host: hub.subut.ai
schemes:
  - http
basePath: /rest/v1/agent
produces:
  - application/json
paths:
  /rh/id:
    get:
      tags:
        - resource host
      operationId: rhID
      description: 'Returns JSON formatted Id of RH, UUID which is the PGP fingerprint'
      responses:
        '200':
          description: JSON formatted Id of RH
          schema:
            type: array
            items:
              $ref: '#/definitions/Fingerprint'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /list:
    get:
      tags:
        - list
      operationId: cliList
      description: >-
        Info returns JSON formatted list of Subutai instances with information
        such as IP address, parent template, etc.
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 20
          description: Limit of returned entries on response
        - name: containersOnly
          in: query
          type: boolean
          description: Parameter to return containers only
        - name: templatesOnly
          in: query
          type: boolean
          description: Parameter to return templates only
        - name: withAncestors
          in: query
          type: boolean
          description: Parameter to return containers/templates with ancestors
        - name: withParents
          in: query
          type: boolean
          description: Parameter to return containers/templates with parents
      responses:
        '200':
          description: List all subutai instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Container'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/attach/{container}':
    get:
      tags:
        - attach
      operationId: attach
      description: >-
        LxcAttach allows user to use container's TTY.

        `name` should be available running Subutai container, otherwise command
        will return error message and non-zero exit code.
      parameters:
        - type: string
          in: path
          name: container
          required: true
          description: Container to be attached
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/container/{name}':
    parameters:
      - type: string
        name: name
        in: path
        required: true
        description: Name of container
      - name: containersOnly
        in: query
        type: boolean
        description: Parameter to return containers only
      - name: templatesOnly
        in: query
        type: boolean
        description: Parameter to return templates only
      - name: withAncestors
        in: query
        type: boolean
        description: Parameter to return containers/templates with ancestors
      - name: withParents
        in: query
        type: boolean
        description: Parameter to return containers/templates with parents
      - name: detailedInfo
        in: query
        type: boolean
        description: Parameter to return detailed info
    get:
      tags:
        - container
      operationId: getContainerInfo
      description: Get container Info in JSON formatted object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Container'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - container
      operationId: destroyOne
      responses:
        '204':
          description: Deleted
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/backup/{name}':
    parameters:
      - type: string
        name: name
        in: path
        required: true
      - name: full
        in: query
        type: boolean
      - name: stop
        in: query
        type: boolean
    get:
      tags:
        - backup
      operationId: backupContainer
      description: >-
        BackupContainer takes a snapshots of each container's volume and stores
        it in the `/mnt/backups/container_name/datetime/` directory. A full
        backup creates a delta-file of each BTRFS subvolume. An incremental
        backup (default) creates a delta-file with the difference of changes
        between the current and last snapshots. All deltas are compressed to
        archives in `/mnt/backups/` directory (container_datetime.tar.gz or
        container_datetime_Full.tar.gz for full backup). A changelog file can be
        found next to backups archive (container_datetime_changelog.txt or
        container_datetime_Full_changelog.txt) which contains a list of changes
        made between two backups.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /batch:
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Batchline'
      tags:
        - batch
      operationId: batch
      description: >-
        Batch binding provides a mechanism to perform several Subutai commands
        in the container in batch, passed in a single JSON message. Initially,
        the purpose of this command was internal for SS <-> Agent communication,
        yet it may be invoked manually from the CLI. The response from a batch
        command returns a JSON array with each element representing the results
        (response) from each command (request) in the batch: the positions of
        responses correlate with the request position in the array
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /cleanup:
    get:
      tags:
        - cleanup
      operationId: cleanup
      description: >-
        Cleanup simply removes every resource associated with a Subutai
        container or template: data, network, configs, etc. The destroy command
        always runs each step in "force" mode to provide reliable deletion
        results; even if some instance components were already removed, the
        destroy command will continue to perform all operations once again while
        ignoring possible underlying errors: i.e. missing configuration files.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/clone/{parent}/{child}':
    post:
      parameters:
        - type: string
          name: parent
          in: path
          required: true
          description: Parent name
        - type: string
          name: child
          in: path
          required: true
          description: Child name
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Cloneargs'
      tags:
        - clone
      operationId: clone
      description: >-
        Clone function creates new `child` container from a Subutai `parent`
        template. If the specified template argument is not deployed in system,
        Subutai first tries to import it, and if import succeeds, it then
        continues to clone from the imported template image. By default, clone
        will use the NAT-ed network interface with IP address received from the
        Subutai DHCP server, but this behavior can be changed with command
        options described below.

        If `ipaddr` option is defined, separate bridge interface will be created
        in specified VLAN and new container will receive static IP address.
        Option `envID` writes the environment ID string inside new container.
        Option `token` is intended to check the origin of new container creation
        request during environment build. This is one of the security checks
        which makes sure that each container creation request is authorized by
        registered user.

        Option `kurjunToken` set kurjun token to clone private and shared
        templates

        The clone options are not intended for manual use: unless you're
        confident about what you're doing. Use default clone format without
        additional options to create Subutai containers.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  /config:
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Configoptions'
      tags:
        - configuration
      operationId: config
      description: Allows read and write container's configuration file
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
    delete:
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Configoptions'
      tags:
        - config
      operationId: destroyEntry
      description: Delete entry in configuration file
      responses:
        '204':
          description: Deleted
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/demote/{container}':
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Demoteoptions'
      tags:
        - demote
      operationId: demote
      description: >-
        Converts template into regular Subutai container.

        A Subutai template is a "locked down" container only to be used for
        cloning purposes. It cannot be started, and its file system cannot be
        modified: it's read-only. Normal operational containers are promoted
        into templates, but sometimes you might want to demote them back to
        regular containers. This is what the demote sub command does: it reverts
        a template without children back into a normal container. Demoted
        container will use NAT network interface and dynamic IP address if
        opposite options are not specified.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/promote/{container}':
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Promoteoptions'
      tags:
        - promote
      operationId: promote
      description: >-
        Promote turns a Subutai container into container template which may be
        cloned with "clone" command. Promote executes several simple steps, such
        as dropping a container's configuration to default values, dumping the
        list of installed packages (this step requires the target container to
        still be running), and setting the container's filesystem to read-only
        to prevent changes.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/export/{container}':
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Exportoptions'
      tags:
        - export
      operationId: export
      description: >-
        Export prepares an archive from a template in the `/mnt/lib/lxc/tmpdir/`
        path. This archive can be moved to another Subutai peer and deployed as
        ready-to-use template or uploaded to Subutai's global template
        repository to make it widely available for others to use.

        Export consist of two steps if the target is a container: container
        promotion to template (see "promote" command) and packing the template
        into the archive. If already a template just the packing of the archive
        takes place.

        Configuration values for template metadata parameters can be overridden
        on export, like the recommended container size when the template is
        cloned using `-s` option.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/hostname/{container}/{name}':
    post:
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - type: string
          name: name
          in: path
          required: true
          description: New name
      tags:
        - hostname
      operationId: hostname
      description: '        - type: string name: container in: path required: true'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Message'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
  '/destroy/{ID}':
    get:
      tags:
        - destroy
      operationId: destroy
      description: Destroy Subutai container
      parameters:
        - type: string
          name: ID
          in: path
          required: true
          description: container name or vlan id
        - name: vlan
          in: query
          type: boolean
          description: 'If true the ID is a vlan, if false is a container name'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/import/{container}':
    get:
      tags:
        - import
      operationId: import
      description: Import Subutai template
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Importoptions'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /info:
    get:
      tags:
        - info
      operationId: info
      description: >-
        Info command's purposed is to display common system information, such as
        external IP address to access the container host quotas, its CPU model,
        RAM size, etc. It's mainly used for internal SS needs.
      parameters:
        - type: string
          name: command
          in: query
          required: true
          description: 'Commands available:  ipaddr, ports, os, quota, system'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/InfoHostStat'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /metrics:
    get:
      tags:
        - metrics
      operationId: metrics
      description: >-
        HostMetrics function retrieves monitoring data from a time-series
        database deployed in the SS Management server for container hosts and
        Resource Hosts. Statistics are being collected by the Subutai daemon and
        includes common information like CPU utilization, network load, RAM and
        disk usage for both containers and hosts. Since the database is located
        on the SS Management Host, hosts which are not a part of a Subutai peer
        have no access to this information. Data aggregation in the time-series
        database has following configuration: last hour statistic is stored "as
        is", last day data aggregates to 1 minute interval, last week is in 5
        minute intervals, After 7 days all statistics is are overwritten by new
        incoming data.
      parameters:
        - type: string
          name: start
          in: query
          required: true
          description: 'Start date. Date Example: 2006-01-02 15:04:05'
        - type: string
          name: end
          in: query
          required: true
          description: 'End date.  Date Example: 2006-01-02 15:04:05'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricInfo'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /quota:
    get:
      tags:
        - quota
      operationId: quota
      description: >-
        Quota function controls container's quotas and thresholds. Available
        resources: cpu, % cpuset, available cores ram, Mb network, Kbps
        rootfs/home/var/opt, Gb The threshold value represents a percentage for
        each resource. Once resource consumption exceeds this threshold it
        triggers an alert. The clone operation, sets no quotas and thresholds
        for new containers; quotas need to be configured with quota command
        after a clone operation.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/quotaArgs'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/quotaOutput'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/rename/{source}/{newname}':
    get:
      tags:
        - rename
      operationId: rename
      description: >-
        Renames a Subutai container impacting filesystem paths, configuration
        values, etc.
      parameters:
        - type: string
          name: source
          in: path
          required: true
          description: Source name
        - type: string
          name: newname
          in: path
          required: true
          description: New name
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/restore/{container}':
    get:
      tags:
        - restore
      operationId: restore
      description: >-
        RestoreContainer restores a Subutai container to a snapshot at a
        specified timestamp if such a backup archive is available.
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - type: string
          name: date
          in: query
          required: false
          description: Date argument
        - type: string
          name: newcontainer
          in: query
          required: false
          description: Name of new container
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/start/{container}':
    get:
      tags:
        - start
      operationId: start
      description: >-
        Starts a Subutai container and checks if container state changed to
        "running" or "starting". If state is not changing for 60 seconds, then
        the "start" operation is considered to have failed.
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/stop/{container}':
    get:
      tags:
        - stop
      operationId: stop
      description: Stops a Subutai container with an additional state check.
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/update/{container}':
    get:
      tags:
        - update
      operationId: update
      description: >-
        Update operation can be divided into two different types: container
        updates and Resource Host updates. Container updates simply perform
        apt-get update and upgrade operations inside target containers without
        any extra commands. Since SS Management is just another container, the
        Subutai update command works fine with the management container too.

        The second type of update, a Resource Host update, checks the Ubuntu
        Store and compares available snap packages with those currently
        installed in the system and, if a newer version is found, installs it.
        Please note, system security policies requires that such commands should
        be performed by the superuser manually, otherwise an application's
        attempt to update itself will be blocked.
      parameters:
        - type: string
          name: container
          in: path
          required: true
          description: Container name
        - type: boolean
          name: check
          in: query
          required: true
          description: 'Just check for updates, don''t update'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /p2p:
    get:
      tags:
        - p2p
      operationId: p2pList
      description: >-
        P2P function controls and configures the peer-to-peer network structure:
        the swarm which includes all hosts with same the same swarm hash and
        secret key.

        P2P is a base layer for Subutai environment networking: all containers
        in same environment are connected to each other via VXLAN tunnels and
        are accesses as if they were in one LAN. It doesn't matter where the
        containers are physically located.
      parameters:
        - type: string
          name: command
          in: query
          required: true
          description: >-
            Accepted commands: - list: list of p2p instances - interfaces: list
            of p2p interfaces - peers: list of p2p swarm participants by hash -
            version: print p2p version
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Text'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
    put:
      tags:
        - p2p
      operationId: p2pUpdate
      description: >-
        P2P function controls and configures the peer-to-peer network structure:
        the swarm which includes all hosts with same the same swarm hash and
        secret key.

        P2P is a base layer for Subutai environment networking: all containers
        in same environment are connected to each other via VXLAN tunnels and
        are accesses as if they were in one LAN. It doesn't matter where the
        containers are physically located.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/P2pArgs'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Text'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
    delete:
      tags:
        - p2p
      operationId: p2pDelete
      description: >-
        P2P function controls and configures the peer-to-peer network structure:
        the swarm which includes all hosts with same the same swarm hash and
        secret key.

        P2P is a base layer for Subutai environment networking: all containers
        in same environment are connected to each other via VXLAN tunnels and
        are accesses as if they were in one LAN. It doesn't matter where the
        containers are physically located.
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/P2pArgs'
      responses:
        '204':
          description: Deleted
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/P2pArgs'
      tags:
        - p2p
      operationId: p2pCreate
      description: >-
        P2P function controls and configures the peer-to-peer network structure:
        the swarm which includes all hosts with same the same swarm hash and
        secret key.

        P2P is a base layer for Subutai environment networking: all containers
        in same environment are connected to each other via VXLAN tunnels and
        are accesses as if they were in one LAN. It doesn't matter where the
        containers are physically located.
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Item'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /proxy:
    get:
      tags:
        - proxy
      operationId: proxyCheck
      description: >-
        ProxyCheck exits with 0 code if domain or node is exists in specified
        vlan, otherwise exitcode is 1
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProxyArgs'
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
    delete:
      tags:
        - proxy
      operationId: proxyDelete
      description: >-
        ProxyDel checks what need to be removed - domain or node and pass args
        to required functions
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProxyArgs'
      responses:
        '204':
          description: Deleted
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
    post:
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ProxyArgs'
      tags:
        - proxy
      operationId: proxyCreate
      description: >-
        ProxyAdd checks input args and perform required operations to configure
        reverse proxy
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /tunnel/list:
    get:
      tags:
        - tunnel
      operationId: tunnelList
      description: performs tunnel check and shows "alive" tunnels
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /tunnel/check:
    get:
      tags:
        - tunnel
      operationId: tunnelCheck
      description: >-
        reads list, checks tunnel ttl, its state and then adds or removes
        required tunnels
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/tunnel/{socket}':
    delete:
      tags:
        - tunnel
      operationId: tunnelDelete
      description: TunDel removes tunnel entry from list and kills running tunnel process
      parameters:
        - type: string
          name: socket
          in: path
          required: true
          description: Socket name
        - name: pid
          type: string
          in: query
          required: false
          description: PID
      responses:
        '204':
          description: Deleted
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
    post:
      parameters:
        - type: string
          name: socket
          in: path
          required: true
          description: Socket name
        - type: string
          name: timeout
          in: query
          required: false
          description: >-
            Tunnels may also be set to be permanent (default) or temporary (ttl
            in seconds). The default destination port is 22.
        - type: boolean
          name: global
          in: query
          required: false
          description: >-
            There are two types of channels - local (default), which is created
            from destination address to host and global, from destination to
            Subutai Helper node.
      tags:
        - tunnel
      operationId: tunnelAdd
      description: TunAdd adds tunnel to specified network socket
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  /vxlan/list:
    get:
      tags:
        - vxlan
      operationId: vxlanList
      description: prints a list of existing VXLAN tunnels
      responses:
        '200':
          description: Ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/vxlan/{iface}':
    delete:
      tags:
        - vxlan
      operationId: vxlanDelete
      description: 'removes OVS bridges and ports by name, brings system interface down'
      parameters:
        - type: string
          name: iface
          in: path
          required: true
          description: Network interface name
      responses:
        '204':
          description: Deleted
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
  '/vxlan/{tunnel}':
    post:
      parameters:
        - type: string
          name: tunnel
          in: path
          required: true
          description: Tunnel name
        - type: string
          name: remoteip
          in: query
          required: true
          description: Remote IP
        - type: string
          name: vlan
          in: query
          required: true
          description: Virtual local network
        - type: string
          name: vni
          in: query
          required: true
          description: Virtual Network Interface
      tags:
        - vxlan
      operationId: vxlanCreate
      description: Creates VXLAN tunnel
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Message'
        default:
          description: generic error response
          schema: null
      x-swagger-router-controller: Default
definitions:
  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
        description: Error code
      message:
        type: string
        description: Error message
  Fingerprint:
    type: object
    required:
      - hash
    properties:
      hash:
        type: string
        readOnly: true
        description: fingerprint
  Container:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        readOnly: true
        description: Name of container
      parent:
        type: string
        minLength: 1
        description: Name of container's parent
      ancestor:
        type: string
        minLength: 1
        description: Name of container's ancestor
  Message:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        readOnly: true
        description: Message returned
      exitcode:
        type: string
        readOnly: true
        description: Returned Exit code
  Batchline:
    type: object
    required:
      - action
      - args
    properties:
      action:
        type: string
        readOnly: true
        description: 'Action to be executed list, backup, import, promote etc.'
      args:
        type: array
        items:
          $ref: '#/definitions/Item'
        readOnly: true
        description: Arguments to action command
  Item:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        readOnly: true
  Cloneargs:
    type: object
    required:
      - parent
      - child
    properties:
      parent:
        type: string
        readOnly: true
        description: Container/Template parent name
      child:
        type: string
        readOnly: true
        description: Child name
      envID:
        type: string
        readOnly: true
        description: Environment ID
      ipaddr:
        type: string
        readOnly: true
        description: IP address
      token:
        type: string
        readOnly: true
      kurjunToken:
        type: string
        readOnly: true
        description: Kurjun Token
  Configoptions:
    type: object
    required:
      - key
      - value
    description: Key / Value pair configuration
    properties:
      key:
        type: string
        readOnly: true
        description: Key
      value:
        type: string
        readOnly: true
        description: Value
  Demoteoptions:
    type: object
    properties:
      ipaddr:
        type: string
        readOnly: true
        description: Ip address
      vlan:
        type: string
        readOnly: true
        description: VLAN name
  Promoteoptions:
    type: object
    properties:
      source:
        type: string
        readOnly: true
        description: Source name
  Exportoptions:
    type: object
    properties:
      version:
        type: string
        readOnly: true
        description: Version number
      size:
        type: string
        description: Size
        enum:
          - tiny
          - small
          - medium
          - large
          - huge
      token:
        type: string
        readOnly: true
        description: Token
      description:
        type: string
        readOnly: true
        description: Description
      private:
        type: boolean
        readOnly: true
        description: Export to private template
  Importoptions:
    type: object
    properties:
      version:
        type: string
        readOnly: true
        description: Version
      torrent:
        type: boolean
        readOnly: true
        description: Get template using torrent
      token:
        type: string
        readOnly: true
        description: Token
  InfoHostStat:
    type: object
    properties:
      cpu:
        type: array
        items:
          $ref: '#/definitions/cpuInfo'
        readOnly: true
      disk:
        type: array
        items:
          $ref: '#/definitions/diskInfo'
        readOnly: true
      ram:
        type: array
        items:
          $ref: '#/definitions/ramInfo'
        readOnly: true
      quota:
        type: array
        items:
          $ref: '#/definitions/quotaInfo'
        readOnly: true
      hostname:
        type: string
        readOnly: true
  MetricInfo:
    type: object
    properties:
      series:
        type: string
        readOnly: true
      messages:
        type: string
        readOnly: true
  cpuInfo:
    type: object
    properties:
      model:
        type: string
        readOnly: true
        description: CPU model
      coreCount:
        type: string
        readOnly: true
        description: Number of CPU Cores
      idle:
        type: string
        readOnly: true
        description: CPU Idle
      frequency:
        type: string
        readOnly: true
        description: CPU frequency
  diskInfo:
    type: object
    properties:
      total:
        type: string
        readOnly: true
        description: Total space available
      used:
        type: string
        readOnly: true
        description: Used space
  ramInfo:
    type: object
    properties:
      free:
        type: string
        readOnly: true
      total:
        type: string
        readOnly: true
      cached:
        type: string
        readOnly: true
  quotaInfo:
    type: object
    properties:
      container:
        type: string
        readOnly: true
      cpu:
        type: string
        readOnly: true
      ram:
        type: string
        readOnly: true
      disk:
        type: array
        items:
          $ref: '#/definitions/diskStructInfo'
        readOnly: true
  diskStructInfo:
    type: object
    properties:
      resource:
        type: string
        description: Resources available
        enum:
          - home
          - opt
          - rootfs
          - var
  quotaArgs:
    type: object
    required:
      - name
      - resource
    properties:
      name:
        type: string
        readOnly: true
      resource:
        type: string
        enum:
          - network
          - rootfs
          - home
          - var
          - opt
          - disk
          - cpuset
          - ram
          - cpu
      size:
        type: string
        minLength: 1
      threshold:
        type: string
        minLength: 1
  quotaOutput:
    type: object
    required:
      - quota
      - threshold
    properties:
      quota:
        type: string
        readOnly: true
      threshold:
        type: string
        minLength: 1
  P2pArgs:
    type: object
    required:
      - interfaceName
      - hash
      - key
      - ttl
    properties:
      interfaceName:
        type: string
        readOnly: true
        description: Interface Name
      hash:
        type: string
        readOnly: true
        description: Hash
      key:
        type: string
        readOnly: true
        description: Key
      ttl:
        type: string
        readOnly: true
        description: Life time
      localPeepIPAddr:
        type: string
        readOnly: true
        description: Local Peep IP Address
      portRange:
        type: string
        readOnly: true
        description: Port Range
  Text:
    type: object
    properties:
      text:
        type: string
        readOnly: true
  ProxyArgs:
    type: object
    required:
      - vlan
    properties:
      vlan:
        type: string
        readOnly: true
        description: VLan Name
      node:
        type: string
        minLength: 1
        description: Node Name
      policy:
        type: string
        enum:
          - rr
          - lb
          - hash
      cert:
        type: string
        minLength: 1
        description: SSL certificate
      domain:
        type: string
        minLength: 1
        description: Domain name

